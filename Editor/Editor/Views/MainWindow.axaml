<suki:SukiWindow
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:Toybox.ViewModels"
    xmlns:controls="clr-namespace:Toybox.Views"
    xmlns:suki="clr-namespace:SukiUI.Controls;assembly=SukiUI"
    xmlns:docking="using:Toybox.Views.Docking"
    mc:Ignorable="d" d:DesignWidth="1920" d:DesignHeight="1080"
    x:Class="Toybox.Views.MainWindow"
    Icon="/Assets/avalonia-logo.ico"
    Title="Toybox">

    <Design.DataContext>
        <viewModels:MainWindowVM/>
    </Design.DataContext>
    
    <Grid RowDefinitions="Auto, *">
        <!-- Menu bar -->
        <Menu Grid.Row="0">
            <MenuItem Header="_File" Margin="0">
                <Button Content="TEST"></Button>
                <Button Content="TEST"></Button>
                <Button Content="TEST"></Button>
            </MenuItem>
        </Menu>

        <docking:DockingHost Grid.Row="1">

            <docking:DockingTabControl>
                <TabItem Header="Viewport">
                    <!-- Game View (NOTE: Native host controls are drawn above everything, so we can't have a control rendered over it in the same window) -->
                    <controls:ThreeDViewport Grid.Row="1" Name="ThreeDViewport">
                    </controls:ThreeDViewport>
                </TabItem>
            </docking:DockingTabControl>

        </docking:DockingHost>
    </Grid>
</suki:SukiWindow>
